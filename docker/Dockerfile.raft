##################################################
# Dockerfike for faiss-gpu-raft
# Copyright (c) 2024 Di-Is
#
# This software is released under the MIT License.
# http://opensource.org/licenses/mit-license.php
##################################################

ARG AUDITWHEEL_POLICY="manylinux2014"
ARG CUDA_MAJOR_VERSION

FROM quay.io/pypa/manylinux2014_x86_64 as manylinux2014

ENV CUDA_REPO_URL=http://developer.download.nvidia.com/compute/cuda/repos/rhel7/x86_64/cuda-rhel7.repo


FROM quay.io/pypa/manylinux_2_28_x86_64 as manylinux_2_28

ENV CUDA_REPO_URL=http://developer.download.nvidia.com/compute/cuda/repos/rhel8/x86_64/cuda-rhel8.repo


FROM manylinux2014 as manylinux2014_cu11


FROM manylinux2014 as manylinux2014_cu12


FROM manylinux_2_28 as manylinux_2_28_cu11

# Use GCC version 11 for compatibility CUDA 11.8
# Ref. https://stackoverflow.com/questions/6622454/cuda-incompatible-with-my-gcc-version
RUN yum -y install \
       gcc-toolset-11-gcc \
       gcc-toolset-11-gcc-c++ \
       gcc-toolset-11-gcc-gfortran \
       gcc-toolset-11-binutils \
 && rm -rf /var/cache/yum/* \
 && yum clean all
ENV PATH="/opt/rh/gcc-toolset-11/root/usr/bin:${PATH}"


FROM manylinux_2_28 as manylinux_2_28_cu12


FROM ${AUDITWHEEL_POLICY}_cu${CUDA_MAJOR_VERSION}

RUN yum install -y openblas-devel openblas-static \
 && rm -rf /var/cache/yum/* \
 && yum clean all

ARG CUDA_MAJOR_VERSION
ARG CUDA_MINOR_VERSION
ARG CUDA_RUNTIME_VERSION
ARG CUDA_CUBLAS_VERSION

RUN yum -y install yum-utils \
 && yum-config-manager --add-repo ${CUDA_REPO_URL} \
 && yum -y install cuda-profiler-api-${CUDA_MAJOR_VERSION}-${CUDA_MINOR_VERSION} \
 && yum -y install \
       cuda-nvcc-${CUDA_MAJOR_VERSION}-${CUDA_MINOR_VERSION} \
       cuda-cudart-devel-${CUDA_MAJOR_VERSION}-${CUDA_MINOR_VERSION}-${CUDA_RUNTIME_VERSION} \
       libcublas-devel-${CUDA_MAJOR_VERSION}-${CUDA_MINOR_VERSION}-${CUDA_CUBLAS_VERSION} \
       libcurand-devel-${CUDA_MAJOR_VERSION}-${CUDA_MINOR_VERSION} \
       libcusparse-devel-${CUDA_MAJOR_VERSION}-${CUDA_MINOR_VERSION} \
       libcusolver-devel-${CUDA_MAJOR_VERSION}-${CUDA_MINOR_VERSION} \
       libnvjitlink-devel-${CUDA_MAJOR_VERSION}-${CUDA_MINOR_VERSION} \
 && ln -s cuda-${CUDA_MAJOR_VERSION}.${CUDA_MINOR_VERSION} /usr/local/cuda \
 && rm -rf /var/cache/yum/* \
 && yum clean all
ENV PATH="/usr/local/cuda/bin:${PATH}"

# apply patch (assume build context is project root)
COPY ./faiss /tmp/project/faiss
COPY ./patch/add-gpu-install.patch /tmp/project/patch/add-gpu-install.patch
COPY ./patch/add-template-definition.patch /tmp/project/patch/add-template-definition.patch
COPY ./patch/modify-raft-recompute-call.patch /tmp/project/patch/modify-raft-recompute-call.patch
WORKDIR /tmp/project
RUN git apply patch/add-gpu-install.patch
RUN git apply patch/add-template-definition.patch
RUN git apply patch/modify-raft-recompute-call.patch

RUN curl https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh --output miniconda.sh \
 && bash miniconda.sh -b -p /opt/conda \
 && rm miniconda.sh
ENV PATH=/opt/conda/bin:${PATH}
RUN conda update -y -q conda

ARG RAFT_VERSION
RUN conda install -y --no-deps \
      -c rapidsai \
      -c conda-forge \
      -c nvidia \
      libraft-headers-only \
      libraft==${RAFT_VERSION} \
      cuda-version=${CUDA_MAJOR_VERSION}.${CUDA_MINOR_VERSION}

RUN curl -o pylibraft.zip https://pypi.nvidia.com/pylibraft-cu${CUDA_MAJOR_VERSION}/pylibraft_cu${CUDA_MAJOR_VERSION}-${RAFT_VERSION}-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\
 && unzip pylibraft.zip\
 && cp pylibraft/libraft.so /opt/conda/lib \
 && rm -r pylibraft pylibraft.zip

# remove unnecessary conda library to avoid library contamination
RUN cd /opt/conda/lib && ls | grep -v -e 'libraft.*' -e 'cmake'  -e 'rapids' -e 'libfmt*' -e 'libspdlog.so*' | xargs rm -r
ENV CMAKE_PREFIX_PATH=/opt/conda/lib:

ARG FAISS_OPT_LEVEL="generic"
ARG FAISS_ENABLE_GPU="ON"
ARG FAISS_ENABLE_RAFT="ON"
ARG BUILD_NJOB=32
ARG CUDA_ARCHITECTURES="80-real"
RUN cd faiss \
 && cmake . \
       -B build \
       -DBUILD_SHARED_LIBS=OFF \
       -DFAISS_ENABLE_GPU=${FAISS_ENABLE_GPU} \
       -DFAISS_ENABLE_RAFT=${FAISS_ENABLE_RAFT} \
       -DFAISS_ENABLE_PYTHON=OFF \
       -DBUILD_TESTING=OFF \
       -DFAISS_OPT_LEVEL=${FAISS_OPT_LEVEL} \
       -DCMAKE_BUILD_TYPE=Release \
       -DCMAKE_CUDA_ARCHITECTURES=${CUDA_ARCHITECTURES} \
       -D_GLIBCXX_USE_CXX11_ABI=ON \
       -DGLIBCXX_USE_CXX11_ABI=ON\
  && make -C build -j${BUILD_NJOB} \
  && make -C build install

RUN rm -r /opt/conda/bin